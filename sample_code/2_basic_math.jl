x1 = 10

### literal zero and one
println("Literal zero and one:")
println("~~~~~~~~~~~~~~~~~~~~~")
println("Literal zero: zero(<variable or type>)")
println("zero(9): ", zero(9))
println("zero(Int64): ", zero(Int64))
println("zero(0.4656): ", zero(0.4656))
println("zero(Float64): ", zero(Float64))
println("zero(true): ", zero(true))
println("zero(false): ", zero(false))
println("zero(Bool): ", zero(Bool))

println("Literal one: one(<variable or type>)")
println("one(9): ", one(9))
println("one(Int64): ", one(Int64))
println("one(0.4656): ", one(0.4656))
println("one(Float64): ", one(Float64))
println("one(true): ", one(true))
println("one(false): ", one(false))
println("one(Bool): ", one(Bool))

### Basic Math
println("Basic Math:")
println("~~~~~~~~~~~")
println("5+1=", 5+1)
println("5*1.=", 5*1.)
println("5/2=", 5/2)
println("10.0\\2=", 10.0\2)
println("5.0/2=", 5.0/2)
println("5.0÷2=", 5.0÷2)
println("5.0%2=", 5.0%2)
println("3^2=",3^2)
println("√4=", sqrt(4))
println("!true=", !true)
println("(x1-1)x1=", (x1-1)x1, " works \n\tBut, using () for anything but coefficient does not work (x1)(x1) fails")

println("1===2: ", 1===2)
println("1===1.: ", 1===1.)
println("1==1.: ", 1==1.)
println("1==2: ", 1==2)
println("1>=2: ", 1>=2)
println("1<2: ", 1<2)
println("1!=2: ", 1!=2)

println("NaN==NaN: ", NaN==NaN)
println("NaN>=NaN: ", NaN>=NaN)
println("NaN<NaN: ", NaN<NaN)
println("NaN!=NaN: ", NaN!=NaN)
println("isnan(NaN) = ", isnan(NaN))
println("isfinite(NaN) = ", isfinite(NaN))

println("Inf==Inf: ", Inf==Inf)
println("Inf>=Inf: ", Inf>=Inf)
println("Inf<Inf: ", Inf<Inf)
println("Inf!=Inf: ", Inf!=Inf)
println("isinf(Inf) = ", isinf(Inf))
println("isfinite(Inf) = ", isfinite(Inf))

### data type conversion
println("Data type conversion:")
println("~~~~~~~~~~~~~~~~~~~~~")
println("x1 datatype: ", typeof(x1))
x2 = Float64(x1)
println("x2 = Float64(x1): ", x2)
println("x2 datatype: ", typeof(x2))
x2 = convert(Int64, x2)
println("x2 = convert(Int64, x2): ", x2)
println("x2 datatype: ", typeof(x2))
